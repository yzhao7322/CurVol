% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/estimation.R
\name{est.fArch}
\alias{est.fArch}
\title{Estimate Functional ARCH Model}
\usage{
est.fArch(fdata, basis, q = 1)
}
\arguments{
\item{fdata}{The functional data object with N paths.}

\item{basis}{The M-dimensional basis functions.}

\item{q}{The order of the depedence on past squared observations. If it is missing, q=1.}
}
\value{
List of model paramters:

d: d Parameter vector, for intercept function \eqn{\delta}.

As: A Matrices, for \eqn{\alpha} operators.
}
\description{
est.fArch function estimates the Functional ARCH(q) model by using the Quasi-Maximum Likelihood Estimation method.
}
\details{
This function estimates the Functional ARCH(q) model:\cr
\eqn{x_i(t)=\sigma_i(t)\varepsilon_i(t)}, for \eqn{t \in [0,1]} and \eqn{1\leq i \leq N},\cr
\eqn{\sigma_i^2(t)=\omega(t)+ \sum_{j=1}^q \int \alpha_j(t,s) x^2_{i-j}(s)ds}.
}
\examples{
\dontrun{
# generate discrete evaluations of the FARCH process and smooth them into a functional data object.
yd = dgp.fgarch(grid_point=50, N=200, "arch")
yd = yd$garch_mat
fd = fda::Data2fd(argvals=seq(0,1,len=50),y=yd,fda::create.bspline.basis(nbasis=32))

# extract data-driven basis functions through the truncated FPCA method.
basis_est = basis.est(yd, M=2, "tfpca")$basis

# estimate an FARCH(1) model with basis when M=1.
arch1_est = est.fArch(fd, basis_est[,1])
}
}
\references{
Aue, A., Horvath, L., F. Pellatt, D. (2017). Functional generalized autoregressive conditional heteroskedasticity. Journal of Time Series Analysis, 38(1), 3-21.\cr
Cerovecki, C., Francq, C., Hormann, S., Zakoian, J. M. (2019). Functional GARCH models: The quasi-likelihood approach and its applications. Journal of Econometrics, 209(2), 353-375.\cr
Hormann, S., Horvath, L., Reeder, R. (2013). A functional version of the ARCH model. Econometric Theory, 29(2), 267-288.
}
\seealso{
\code{\link{est.fGarch}} \code{\link{est.fGarchx}} \code{\link{diagnostic.fGarch}}
}
